// Code generated by protoc-gen-go.
// source: ss_base.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type S2SBaseMsgId int32

const (
	S2SBaseMsgId_s2s_base_min_msg_id              S2SBaseMsgId = 0
	S2SBaseMsgId_s2s_server_session_veriry_req_id S2SBaseMsgId = 1
	S2SBaseMsgId_s2s_server_session_veriry_ack_id S2SBaseMsgId = 2
	S2SBaseMsgId_s2s_server_session_ping_id       S2SBaseMsgId = 3
	S2SBaseMsgId_s2s_server_session_pong_id       S2SBaseMsgId = 4
	S2SBaseMsgId_s2s_client_session_ping_id       S2SBaseMsgId = 5
	S2SBaseMsgId_s2s_client_session_pong_id       S2SBaseMsgId = 6
	S2SBaseMsgId_service_discovery_req_id         S2SBaseMsgId = 7
	S2SBaseMsgId_service_discovery_ack_id         S2SBaseMsgId = 8
	S2SBaseMsgId_s2s_base_max_msg_id              S2SBaseMsgId = 299
)

var S2SBaseMsgId_name = map[int32]string{
	0:   "s2s_base_min_msg_id",
	1:   "s2s_server_session_veriry_req_id",
	2:   "s2s_server_session_veriry_ack_id",
	3:   "s2s_server_session_ping_id",
	4:   "s2s_server_session_pong_id",
	5:   "s2s_client_session_ping_id",
	6:   "s2s_client_session_pong_id",
	7:   "service_discovery_req_id",
	8:   "service_discovery_ack_id",
	299: "s2s_base_max_msg_id",
}
var S2SBaseMsgId_value = map[string]int32{
	"s2s_base_min_msg_id":              0,
	"s2s_server_session_veriry_req_id": 1,
	"s2s_server_session_veriry_ack_id": 2,
	"s2s_server_session_ping_id":       3,
	"s2s_server_session_pong_id":       4,
	"s2s_client_session_ping_id":       5,
	"s2s_client_session_pong_id":       6,
	"service_discovery_req_id":         7,
	"service_discovery_ack_id":         8,
	"s2s_base_max_msg_id":              299,
}

func (x S2SBaseMsgId) String() string {
	return proto.EnumName(S2SBaseMsgId_name, int32(x))
}
func (S2SBaseMsgId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type S2SServerSessionVeriryReq struct {
	ServerId      uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ServerType    uint32 `protobuf:"varint,2,opt,name=server_type,json=serverType" json:"server_type,omitempty"`
	ServerTypeStr string `protobuf:"bytes,3,opt,name=server_type_str,json=serverTypeStr" json:"server_type_str,omitempty"`
	Ip            string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Token         string `protobuf:"bytes,5,opt,name=token" json:"token,omitempty"`
}

func (m *S2SServerSessionVeriryReq) Reset()                    { *m = S2SServerSessionVeriryReq{} }
func (m *S2SServerSessionVeriryReq) String() string            { return proto.CompactTextString(m) }
func (*S2SServerSessionVeriryReq) ProtoMessage()               {}
func (*S2SServerSessionVeriryReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type S2SServerSessionVeriryAck struct {
}

func (m *S2SServerSessionVeriryAck) Reset()                    { *m = S2SServerSessionVeriryAck{} }
func (m *S2SServerSessionVeriryAck) String() string            { return proto.CompactTextString(m) }
func (*S2SServerSessionVeriryAck) ProtoMessage()               {}
func (*S2SServerSessionVeriryAck) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type S2SServerSessionPing struct {
}

func (m *S2SServerSessionPing) Reset()                    { *m = S2SServerSessionPing{} }
func (m *S2SServerSessionPing) String() string            { return proto.CompactTextString(m) }
func (*S2SServerSessionPing) ProtoMessage()               {}
func (*S2SServerSessionPing) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type S2SServerSessionPong struct {
}

func (m *S2SServerSessionPong) Reset()                    { *m = S2SServerSessionPong{} }
func (m *S2SServerSessionPong) String() string            { return proto.CompactTextString(m) }
func (*S2SServerSessionPong) ProtoMessage()               {}
func (*S2SServerSessionPong) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type S2SClientSessionPing struct {
}

func (m *S2SClientSessionPing) Reset()                    { *m = S2SClientSessionPing{} }
func (m *S2SClientSessionPing) String() string            { return proto.CompactTextString(m) }
func (*S2SClientSessionPing) ProtoMessage()               {}
func (*S2SClientSessionPing) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type S2SClientSessionPong struct {
}

func (m *S2SClientSessionPong) Reset()                    { *m = S2SClientSessionPong{} }
func (m *S2SClientSessionPong) String() string            { return proto.CompactTextString(m) }
func (*S2SClientSessionPong) ProtoMessage()               {}
func (*S2SClientSessionPong) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type SdConnAttr struct {
	ServerId      uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	ServerType    uint32 `protobuf:"varint,2,opt,name=server_type,json=serverType" json:"server_type,omitempty"`
	ServerTypeStr string `protobuf:"bytes,3,opt,name=server_type_str,json=serverTypeStr" json:"server_type_str,omitempty"`
	Inter         string `protobuf:"bytes,4,opt,name=inter" json:"inter,omitempty"`
	Outer         string `protobuf:"bytes,5,opt,name=outer" json:"outer,omitempty"`
	Token         string `protobuf:"bytes,6,opt,name=token" json:"token,omitempty"`
}

func (m *SdConnAttr) Reset()                    { *m = SdConnAttr{} }
func (m *SdConnAttr) String() string            { return proto.CompactTextString(m) }
func (*SdConnAttr) ProtoMessage()               {}
func (*SdConnAttr) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type ServiceDiscovery struct {
	ServerId       uint64        `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	S2SInterListen string        `protobuf:"bytes,2,opt,name=s2s_inter_listen,json=s2sInterListen" json:"s2s_inter_listen,omitempty"`
	S2SOuterListen string        `protobuf:"bytes,3,opt,name=s2s_outer_listen,json=s2sOuterListen" json:"s2s_outer_listen,omitempty"`
	S2SHttpSurl    string        `protobuf:"bytes,4,opt,name=s2s_http_surl,json=s2sHttpSurl" json:"s2s_http_surl,omitempty"`
	S2SHttpCurl1   string        `protobuf:"bytes,5,opt,name=s2s_http_curl1,json=s2sHttpCurl1" json:"s2s_http_curl1,omitempty"`
	S2SHttpCurl2   string        `protobuf:"bytes,6,opt,name=s2s_http_curl2,json=s2sHttpCurl2" json:"s2s_http_curl2,omitempty"`
	ConnList       []*SdConnAttr `protobuf:"bytes,7,rep,name=conn_list,json=connList" json:"conn_list,omitempty"`
	C2SInterListen string        `protobuf:"bytes,8,opt,name=c2s_inter_listen,json=c2sInterListen" json:"c2s_inter_listen,omitempty"`
	C2SOuterListen string        `protobuf:"bytes,9,opt,name=c2s_outer_listen,json=c2sOuterListen" json:"c2s_outer_listen,omitempty"`
	C2SHttpsUrl    string        `protobuf:"bytes,10,opt,name=c2s_https_url,json=c2sHttpsUrl" json:"c2s_https_url,omitempty"`
	C2SHttpsCert   string        `protobuf:"bytes,11,opt,name=c2s_https_cert,json=c2sHttpsCert" json:"c2s_https_cert,omitempty"`
	C2SHttpsKey    string        `protobuf:"bytes,12,opt,name=c2s_https_key,json=c2sHttpsKey" json:"c2s_https_key,omitempty"`
	SdkTcpInter    string        `protobuf:"bytes,13,opt,name=sdk_tcp_inter,json=sdkTcpInter" json:"sdk_tcp_inter,omitempty"`
	SdkTcpOut      string        `protobuf:"bytes,14,opt,name=sdk_tcp_out,json=sdkTcpOut" json:"sdk_tcp_out,omitempty"`
	SdkHttpsUrtl   string        `protobuf:"bytes,15,opt,name=sdk_https_urtl,json=sdkHttpsUrtl" json:"sdk_https_urtl,omitempty"`
	SdkHttpsCert   string        `protobuf:"bytes,16,opt,name=sdk_https_cert,json=sdkHttpsCert" json:"sdk_https_cert,omitempty"`
	SdkHttpsKey    string        `protobuf:"bytes,17,opt,name=sdk_https_key,json=sdkHttpsKey" json:"sdk_https_key,omitempty"`
}

func (m *ServiceDiscovery) Reset()                    { *m = ServiceDiscovery{} }
func (m *ServiceDiscovery) String() string            { return proto.CompactTextString(m) }
func (*ServiceDiscovery) ProtoMessage()               {}
func (*ServiceDiscovery) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ServiceDiscovery) GetConnList() []*SdConnAttr {
	if m != nil {
		return m.ConnList
	}
	return nil
}

type ServiceDiscoveryReq struct {
	ServerId uint64 `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *ServiceDiscoveryReq) Reset()                    { *m = ServiceDiscoveryReq{} }
func (m *ServiceDiscoveryReq) String() string            { return proto.CompactTextString(m) }
func (*ServiceDiscoveryReq) ProtoMessage()               {}
func (*ServiceDiscoveryReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type ServiceDiscoveryAck struct {
	RebuildFlag bool              `protobuf:"varint,1,opt,name=rebuild_flag,json=rebuildFlag" json:"rebuild_flag,omitempty"`
	VerifyFlag  bool              `protobuf:"varint,2,opt,name=verify_flag,json=verifyFlag" json:"verify_flag,omitempty"`
	SdInfo      *ServiceDiscovery `protobuf:"bytes,3,opt,name=sd_info,json=sdInfo" json:"sd_info,omitempty"`
}

func (m *ServiceDiscoveryAck) Reset()                    { *m = ServiceDiscoveryAck{} }
func (m *ServiceDiscoveryAck) String() string            { return proto.CompactTextString(m) }
func (*ServiceDiscoveryAck) ProtoMessage()               {}
func (*ServiceDiscoveryAck) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ServiceDiscoveryAck) GetSdInfo() *ServiceDiscovery {
	if m != nil {
		return m.SdInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*S2SServerSessionVeriryReq)(nil), "pb.s2s_server_session_veriry_req")
	proto.RegisterType((*S2SServerSessionVeriryAck)(nil), "pb.s2s_server_session_veriry_ack")
	proto.RegisterType((*S2SServerSessionPing)(nil), "pb.s2s_server_session_ping")
	proto.RegisterType((*S2SServerSessionPong)(nil), "pb.s2s_server_session_pong")
	proto.RegisterType((*S2SClientSessionPing)(nil), "pb.s2s_client_session_ping")
	proto.RegisterType((*S2SClientSessionPong)(nil), "pb.s2s_client_session_pong")
	proto.RegisterType((*SdConnAttr)(nil), "pb.sd_conn_attr")
	proto.RegisterType((*ServiceDiscovery)(nil), "pb.service_discovery")
	proto.RegisterType((*ServiceDiscoveryReq)(nil), "pb.service_discovery_req")
	proto.RegisterType((*ServiceDiscoveryAck)(nil), "pb.service_discovery_ack")
	proto.RegisterEnum("pb.S2SBaseMsgId", S2SBaseMsgId_name, S2SBaseMsgId_value)
}

var fileDescriptor1 = []byte{
	// 671 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x55, 0x5b, 0x6e, 0xd3, 0x40,
	0x14, 0x25, 0x4e, 0x93, 0x26, 0xe3, 0x24, 0x4d, 0x07, 0xaa, 0x0e, 0xcf, 0x96, 0x08, 0xa1, 0x0a,
	0x89, 0x48, 0x84, 0x1d, 0x50, 0x09, 0x51, 0x1e, 0x42, 0x4a, 0xca, 0xf7, 0x28, 0x19, 0x4f, 0xc3,
	0x28, 0xae, 0x6d, 0x3c, 0x13, 0x84, 0xd7, 0xc0, 0x0a, 0x58, 0x43, 0xff, 0xd9, 0x03, 0xbb, 0xe2,
	0xce, 0xc3, 0xb1, 0x93, 0x3a, 0xe1, 0x8f, 0xaf, 0xda, 0xe7, 0x1c, 0xdf, 0x39, 0xe7, 0xce, 0xed,
	0x0d, 0xea, 0x4a, 0x49, 0x67, 0x53, 0xc9, 0x87, 0x49, 0x1a, 0xab, 0x18, 0x7b, 0xc9, 0x6c, 0x70,
	0x53, 0x43, 0x8f, 0xe5, 0x48, 0x52, 0xc9, 0xd3, 0xef, 0x3c, 0x85, 0x3f, 0x52, 0x8a, 0x38, 0xa2,
	0xf0, 0x2c, 0xd2, 0x8c, 0xa6, 0xfc, 0x1b, 0x7e, 0x88, 0xda, 0x8e, 0x14, 0x01, 0xa9, 0x9d, 0xd6,
	0xce, 0xf6, 0xc6, 0x2d, 0x0b, 0x5c, 0x04, 0xf8, 0x04, 0xf9, 0x8e, 0x54, 0x59, 0xc2, 0x89, 0x07,
	0x74, 0x77, 0x8c, 0x2c, 0x74, 0x09, 0x08, 0x7e, 0x8e, 0x0e, 0x4a, 0x02, 0x2a, 0x55, 0x4a, 0xea,
	0x20, 0x6a, 0x8f, 0xbb, 0x85, 0x68, 0xa2, 0x52, 0xdc, 0x43, 0x9e, 0x48, 0xc8, 0x9e, 0xa1, 0xe0,
	0x09, 0xdf, 0x43, 0x0d, 0x15, 0x2f, 0x78, 0x44, 0x1a, 0x06, 0xb2, 0x2f, 0x83, 0x93, 0x5d, 0x66,
	0xa7, 0x6c, 0x31, 0xb8, 0x8f, 0x8e, 0x2b, 0x04, 0x89, 0x88, 0xe6, 0xdb, 0xa8, 0xb8, 0xa0, 0x58,
	0x28, 0x78, 0xa4, 0x2a, 0xbf, 0xda, 0xa4, 0xf4, 0x57, 0xbf, 0x6b, 0xa8, 0x23, 0x03, 0xca, 0xe2,
	0x28, 0xa2, 0x53, 0x05, 0x19, 0xfe, 0x4f, 0xa7, 0xa0, 0x33, 0x22, 0x52, 0x3c, 0x75, 0xcd, 0xb2,
	0x2f, 0x1a, 0x8d, 0x97, 0x1a, 0x75, 0xfd, 0x32, 0x2f, 0x45, 0x17, 0x9b, 0xe5, 0x2e, 0xfe, 0x6a,
	0xa0, 0x43, 0x5d, 0x53, 0x30, 0x4e, 0x03, 0x21, 0x59, 0x0c, 0xd5, 0xb3, 0xdd, 0xee, 0xcf, 0x50,
	0x5f, 0xb7, 0xc1, 0x9c, 0x45, 0x43, 0x21, 0x15, 0xd4, 0xf4, 0x4c, 0xcd, 0x1e, 0xe0, 0x17, 0x1a,
	0xfe, 0x68, 0xd0, 0x5c, 0x69, 0xce, 0xcf, 0x95, 0xf5, 0x95, 0xf2, 0xf3, 0xb2, 0x50, 0x0e, 0x60,
	0x1e, 0x41, 0xf9, 0x55, 0xa9, 0x84, 0xca, 0x65, 0x1a, 0xba, 0x40, 0x3e, 0x80, 0xef, 0x00, 0x9b,
	0x00, 0x84, 0x9f, 0xa1, 0xde, 0x4a, 0xc3, 0x00, 0x78, 0xe5, 0xf2, 0x75, 0x9c, 0xe8, 0x5c, 0x63,
	0xb7, 0x54, 0x23, 0x97, 0xb7, 0xac, 0x1a, 0xe1, 0x97, 0xa8, 0x6d, 0xee, 0x4a, 0x9b, 0x22, 0xfb,
	0xa7, 0xf5, 0x33, 0x7f, 0xd4, 0x1f, 0x26, 0xb3, 0x61, 0xf9, 0x0e, 0xc7, 0x2d, 0xfd, 0xa8, 0x0d,
	0xea, 0x20, 0x6c, 0x33, 0x72, 0xcb, 0x06, 0x61, 0xb7, 0x22, 0xb3, 0xcd, 0xc8, 0xed, 0x95, 0x72,
	0x23, 0x32, 0x73, 0x46, 0x25, 0xd5, 0x91, 0x91, 0x8d, 0xcc, 0xac, 0x4f, 0xf9, 0xc5, 0x46, 0x2e,
	0x34, 0x8c, 0xa7, 0x8a, 0xf8, 0x36, 0x4c, 0x2e, 0x3a, 0x07, 0x6c, 0xbd, 0xd2, 0x82, 0x67, 0xa4,
	0xb3, 0x5e, 0xe9, 0x03, 0xcf, 0x4c, 0x83, 0x83, 0x05, 0x55, 0x2c, 0xb1, 0x29, 0x48, 0xd7, 0x35,
	0x38, 0x58, 0x5c, 0xb2, 0xc4, 0x24, 0xc0, 0x4f, 0x90, 0x9f, 0x6b, 0xc0, 0x3f, 0xe9, 0x19, 0x45,
	0xdb, 0x2a, 0xc0, 0xb9, 0x69, 0x2d, 0xf0, 0xb9, 0x63, 0x15, 0x92, 0x03, 0xd7, 0xda, 0x60, 0xe1,
	0x2c, 0xab, 0x70, 0x5d, 0x65, 0x3c, 0xf7, 0xd7, 0x55, 0xb9, 0xe7, 0x42, 0xa5, 0x3d, 0x1f, 0xae,
	0xfc, 0xe4, 0x9e, 0x07, 0xef, 0xd1, 0xd1, 0xad, 0xd1, 0xfc, 0xf7, 0x1a, 0x5a, 0xcd, 0xb9, 0x57,
	0x9e, 0xf3, 0x9f, 0xb5, 0xaa, 0x62, 0xb0, 0x26, 0xf0, 0x53, 0xd4, 0x49, 0xf9, 0x6c, 0x29, 0xc2,
	0x80, 0x5e, 0x85, 0xd3, 0xb9, 0xa9, 0xd7, 0x1a, 0xfb, 0x0e, 0x7b, 0x0b, 0x90, 0xfe, 0x7f, 0xd5,
	0x7b, 0xe5, 0x2a, 0xb3, 0x0a, 0xcf, 0x28, 0x90, 0x85, 0x8c, 0x60, 0x88, 0xf6, 0x61, 0x72, 0x44,
	0x74, 0x15, 0x9b, 0xf9, 0xf6, 0x47, 0x47, 0x66, 0x98, 0x36, 0xcf, 0x1b, 0x37, 0x65, 0x70, 0x01,
	0xa2, 0x17, 0x7f, 0x3c, 0xd4, 0x99, 0x8c, 0x26, 0x6f, 0x60, 0xff, 0x7e, 0x92, 0x73, 0x30, 0x7d,
	0x8c, 0xee, 0xea, 0xa9, 0xd5, 0x0b, 0x99, 0x5e, 0x8b, 0x88, 0x5e, 0xcb, 0x39, 0x64, 0xeb, 0xdf,
	0x81, 0x6e, 0x9e, 0xee, 0x5c, 0xc9, 0x5a, 0x55, 0xdb, 0xad, 0x82, 0x90, 0x5a, 0xe5, 0xc1, 0xfd,
	0x3e, 0xd8, 0xb2, 0x10, 0x35, 0x5f, 0xdf, 0xc6, 0xc7, 0x96, 0xdf, 0xcb, 0xf9, 0x8a, 0xd5, 0xa8,
	0xf9, 0xc6, 0x36, 0xde, 0x7d, 0xdf, 0xc4, 0x8f, 0x10, 0xa9, 0xbc, 0x4f, 0xcd, 0xee, 0x57, 0xb3,
	0xce, 0x7b, 0x0b, 0x93, 0x72, 0x83, 0xa6, 0x3f, 0xf2, 0x06, 0xdd, 0x78, 0xb3, 0xa6, 0xf9, 0x01,
	0x7b, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x91, 0x58, 0xff, 0x3c, 0xd1, 0x06, 0x00, 0x00,
}
